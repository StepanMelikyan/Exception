//1.Реализуйте метод, который запрашивает у пользователя ввод дробного числа (типа float), 
//и возвращает введенное значение. Ввод текста вместо числа не должно приводить к падению приложения, 
//вместо этого, необходимо повторно запросить у пользователя ввод данных.

import java.util.Scanner;

public static float getUserInput() {
    Scanner scanner = new Scanner(System.in);
    float userInput;
    while (true) {
        try {
            System.out.print("Введите дробное число: ");
            userInput = scanner.nextFloat();
            break;
        } catch (InputMismatchException e) {
            System.out.println("Неверный формат числа, попробуйте еще раз.");
            scanner.next(); // очистка буфера ввода
        }
    }
    return userInput;
}


//2. Если необходимо, исправьте данный код 
try {
   int d = 0;
   double catchedRes1 = intArray[8] / d;
   System.out.println("catchedRes1 = " + catchedRes1);
} catch (ArithmeticException e) {
   System.out.println("Catching exception: " + e);
}

//Идет обращение к несуществующему элементу массива intArray. Добавляю проверку на инициализацию и длину массива

if (intArray == null || intArray.length < 9) {
    throw new IllegalArgumentException("Массив не был инициализирован или его длина меньше 9");
}

try {
   int d = 0;
   double catchedRes1 = intArray[8] / d;
   System.out.println("catchedRes1 = " + catchedRes1);
} catch (ArithmeticException e) {
   System.out.println("Catching exception: " + e);
}


//3. следующий код, исправьте его там, где требуется 
public static void main(String[] args) throws Exception {
   try {
       int a = 90;
       int b = 3;
       System.out.println(a / b);
       printSum(23, 234);
       int[] abc = { 1, 2 };
       abc[3] = 9;
   } catch (Throwable ex) {
       System.out.println("Что-то пошло не так...");
   } catch (NullPointerException ex) {
       System.out.println("Указатель не может указывать на null!");
   } catch (IndexOutOfBoundsException ex) {
       System.out.println("Массив выходит за пределы своего размера!");
   }
}
public static void printSum(Integer a, Integer b) throws FileNotFoundException {
   System.out.println(a + b);
}

//исправленный код

public static void main(String[] args) throws Exception {
   try {
       int a = 90;
       int b = 3;
       System.out.println(a / b);
       printSum(23, 234);
       int[] abc = new int[4]; // увеличиваю лину массива
       abc[3] = 9;
   } catch (Throwable ex) {
       System.out.println("Что-то пошло не так...");
   } catch (NullPointerException ex) {
       System.out.println("Указатель не может указывать на null!");
   } catch (IndexOutOfBoundsException ex) {
       System.out.println("Массив выходит за пределы своего размера!");
   }
}

public static void printSum(Integer a, Integer b) throws FileNotFoundException {
   System.out.println(a + b);
}


//4.Разработайте программу, которая выбросит Exception, когда пользователь вводит пустую строку. 
//Пользователю должно показаться сообщение, что пустые строки вводить нельзя

import java.util.Scanner;

public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.print("Введите строку: ");
       String input = scanner.nextLine();

       try {
           if (input.isEmpty()) {
               throw new Exception("Вы ввели пустую строку!");
           } else {
               System.out.println("Вы ввели строку: " + input);
           }
       } catch (Exception e) {
           System.out.println(e.getMessage());
       }
   }
}
